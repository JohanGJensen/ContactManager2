{"version":3,"sources":["Context.js","Header.js","Contact.js","Contacts.js","AddContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contact","payload","concat","toConsumableArray","filter","id","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Header","className","Link","to","Contact","onDeleteClick","_this2","_this$props$contact","name","email","phone","style","cursor","float","color","onClick","bind","Contacts","Fragment","map","src_Contact","AddContact","onChange","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","uuid","history","push","_this$state2","htmlFor","App","Context_Provider","HashRouter","src_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f232f424.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch(action.type) {\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contact: [action.payload, ...state.contact]\r\n      };\r\n      case \"DELETE_CONTACT\":\r\n        return {\r\n          ...state,\r\n          contact: state.contact.filter(\r\n            contact => contact.id !== action.payload\r\n          )\r\n        };\r\n      default: \r\n        return state;\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contact: [\r\n      \r\n    ],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({contact: res.data});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-warning mb-3\">\r\n        <div className=\"container\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                HOME\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                ADD\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"./Context\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Contact extends Component {\r\n  onDeleteClick = async (id, dispatch) => {\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n\r\n          return (\r\n            <div className=\"card col-6 col-md-10 col-sm-12 mx-auto\">\r\n              <h3 className=\"display-5\">\r\n                {name}\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    float: \"right\",\r\n                    color: \"red\"\r\n                  }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n              </h3>\r\n              <p>{email}</p>\r\n              <p>{phone}</p>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"./Context\";\r\nimport Contact from \"./Contact\";\r\n\r\nclass Contacts extends Component {\r\n\r\n  \r\n\r\n  render() {\r\n\r\n    return (\r\n      <Consumer>\r\n              {value => {\r\n                  const {contact} = value;\r\n\r\n                  return (\r\n                      <React.Fragment>\r\n                          <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n                          {contact.map(contact => (\r\n                              <Contact key={contact.id} contact={contact} />\r\n                          ))}\r\n                      </React.Fragment>\r\n                  )\r\n              }}\r\n          </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"./Context\";\r\nimport uuid from \"uuid\";\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\"\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value});\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const {name, email, phone} = this.state;\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone,\r\n            id: uuid()\r\n        }\r\n\r\n        dispatch({type: \"ADD_CONTACT\", payload: newContact});\r\n        \r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n\r\n  render() {\r\n    const {name, email, phone} = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"container\">\r\n              <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Insert Name Here</label>\r\n                  <input\r\n                    className=\"form-control form-control-lg\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email Here</label>\r\n                  <input\r\n                    className=\"form-control form-control-lg\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"phone\">Phone Here</label>\r\n                  <input\r\n                    className=\"form-control form-control-lg\"\r\n                    type=\"number\"\r\n                    name=\"phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"Add Contact\"\r\n                  className=\"btn btn-block btn-light\"\r\n                />\r\n              </form>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"./Context\";\n\nimport Header from \"./Header\";\nimport Contacts from \"./Contacts\";\nimport AddContact from \"./AddContact\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Switch>\n              <Route exact path=\"/\" component= {Contacts} />\n              <Route exact path=\"/contact/add\" component= {AddContact} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}